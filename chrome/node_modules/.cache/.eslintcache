[{"/Users/jinhyun/Desktop/projects/reminder/chrome/src/index.js":"1","/Users/jinhyun/Desktop/projects/reminder/chrome/src/App.js":"2","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/Nav.js":"3","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Reminder.js":"4","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Main.js":"5","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Todo.js":"6","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/ReminderElement.js":"7","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoNewModal.js":"8","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoElement.js":"9","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoEditModal.js":"10","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoCountDown.js":"11","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TimeSelector2.js":"12","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TimeSelector.js":"13"},{"size":219,"mtime":1629640314426,"results":"14","hashOfConfig":"15"},{"size":776,"mtime":1630232184797,"results":"16","hashOfConfig":"15"},{"size":565,"mtime":1630234771952,"results":"17","hashOfConfig":"15"},{"size":2510,"mtime":1630248818301,"results":"18","hashOfConfig":"15"},{"size":367,"mtime":1630234752848,"results":"19","hashOfConfig":"15"},{"size":5027,"mtime":1630249824357,"results":"20","hashOfConfig":"15"},{"size":4464,"mtime":1630237277692,"results":"21","hashOfConfig":"15"},{"size":3195,"mtime":1630244331521,"results":"22","hashOfConfig":"15"},{"size":2396,"mtime":1630248643631,"results":"23","hashOfConfig":"15"},{"size":3272,"mtime":1630239728395,"results":"24","hashOfConfig":"15"},{"size":1723,"mtime":1630244773846,"results":"25","hashOfConfig":"15"},{"size":818,"mtime":1630234763248,"results":"26","hashOfConfig":"15"},{"size":688,"mtime":1630234788306,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5ue1j",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/jinhyun/Desktop/projects/reminder/chrome/src/index.js",[],["56","57"],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/App.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/Nav.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Reminder.js",["58"],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Main.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Todo.js",["59"],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/ReminderElement.js",["60","61"],"import \"../Style/ReminderElement.css\";\nimport { useState, useRef, useEffect } from \"react\";\n\nfunction ReminderElement({\n  name,\n  time,\n  isOn,\n  deleteDummy,\n  toggleHandler,\n  reminderList,\n  setReminderList,\n  idx,\n}) {\n  const [isToggleOn, setIsToggleOn] = useState(isOn);\n  const [isEditName, setIsEditName] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [newTime, setNewTime] = useState(time);\n  const inputName = useRef(null);\n  const inputTime = useRef(null);\n\n  useEffect(() => {\n    setIsToggleOn(isOn);\n  }, [isOn]);\n\n  const [timerID, setTimerID] = useState(null);\n  useEffect(() => {\n    const timer = () => {\n      return setInterval(() => {\n        console.log(`${name} ${time}분 지났습니다.`);\n      }, time * 60000);\n    };\n\n    clearInterval(timerID);\n    if (isToggleOn) {\n      setTimerID(timer());\n    }\n  }, [name, time, isToggleOn]);\n\n  useEffect(() => {\n    if (isEditName) {\n      inputName.current.focus();\n    }\n  }, [isEditName]);\n\n  const handleEdit = (e) => {\n    if (e.target.className === \"reminder__edit__name\") {\n      setIsEditName(!isEditName);\n    }\n  };\n\n  const handleBlur = (e) => {\n    if (e.target.parentNode.className === \"reminder__edit__name\") {\n      setIsEditName(!isEditName);\n      let newList = reminderList.map((el, index) => {\n        if (index === idx) {\n          el.name = newName;\n        }\n        return el;\n      });\n      setReminderList([...newList]);\n    }\n  };\n\n  // 시간 바꿀때 리마인드 리스트에 적용되는 시점을 온블러에서 뉴 타임이 바뀔때로 바꿈.\n  useEffect(() => {\n    let newList = reminderList.map((el, index) => {\n      if (index === idx) {\n        el.time = newTime;\n      }\n      return el;\n    });\n    setReminderList([...newList]);\n  }, [newTime]);\n\n  return (\n    <div className=\"reminderElement\">\n      <div className=\"reminder__row\">\n        {/* Reminder Name */}\n        {isEditName ? (\n          <div className=\"reminder__edit__name\">\n            <input\n              type=\"text\"\n              value={newName}\n              placeholder={\"입력바람\"}\n              onBlur={(e) => handleBlur(e)}\n              ref={inputName}\n              onChange={(e) => {\n                setNewName(e.target.value);\n              }}\n              onKeyUp={(e) => {\n                if (e.key === \"Enter\") {\n                  handleBlur(e);\n                }\n              }}\n            />\n          </div>\n        ) : newName.length === 0 ? (\n          <div className=\"reminder__edit__name\" onClick={(e) => handleEdit(e)}>\n            입력바람\n          </div>\n        ) : (\n          <div className=\"reminder__edit__name\" onClick={(e) => handleEdit(e)}>\n            {name}\n          </div>\n        )}\n\n        {/* Toggle button */}\n        <div\n          className={\n            isOn\n              ? \"reminder__toggle__container\"\n              : \"reminder__toggle__container reminder__toggle__container__false\"\n          }\n          onClick={toggleHandler}\n        >\n          <div\n            className={\n              isOn\n                ? \"reminder__toggle__circle\"\n                : \"reminder__toggle__circle reminder__toggle__circle__false\"\n            }\n          ></div>\n        </div>\n      </div>\n\n      <div className=\"reminder__row\">\n        {/* Interval Setting */}\n        <div className=\"reminder__edit__time\">\n          <input\n            className=\"reminder__adjust__time\"\n            type=\"range\"\n            min=\"10\"\n            max=\"360\"\n            step=\"10\"\n            value={newTime}\n            placeholder={\"숫자입력\"}\n            ref={inputTime}\n            onChange={(e) => {\n              if (Number(e.target.value) < 0) {\n                e.target.value = \"0\";\n              }\n              setNewTime(e.target.value);\n            }}\n            onKeyUp={(e) => {\n              if (e.key === \"Enter\") {\n                handleBlur(e);\n              }\n            }}\n          />\n          {newTime >= 60 ? newTime % 60 === 0 ? <div className=\"reminder__display__time\">{newTime / 60}시간</div> : <div className=\"reminder__display__time\">{Math.floor(newTime / 60)}시간 {newTime % 60}분</div> : <div className=\"reminder__display__time\">{newTime}분</div>}\n        </div>\n\n        {/* Delete Button */}\n        <div className=\"reminder__delete\" onClick={deleteDummy}>\n          <i class=\"far fa-trash-alt\"></i>\n        </div>\n      </div>\n    </div >\n  );\n}\nexport default ReminderElement;\n","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoNewModal.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoElement.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoEditModal.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoCountDown.js",["62"],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TimeSelector2.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TimeSelector.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":31,"column":6,"nodeType":"69","endLine":31,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":74,"column":5,"nodeType":"69","endLine":74,"endColumn":7,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":37,"column":6,"nodeType":"69","endLine":37,"endColumn":30,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":73,"column":6,"nodeType":"69","endLine":73,"endColumn":15,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":17,"column":6,"nodeType":"69","endLine":17,"endColumn":16,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dummy'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'todoDummy'. Either include it or remove the dependency array.",["82"],"React Hook useEffect has a missing dependency: 'timerID'. Either include it or remove the dependency array.",["83"],"React Hook useEffect has missing dependencies: 'idx', 'reminderList', and 'setReminderList'. Either include them or remove the dependency array. If 'setReminderList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["84"],"React Hook useEffect has missing dependencies: 'now' and 'result'. Either include them or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [dummy]",{"range":"96","text":"97"},"Update the dependencies array to be: [todoDummy]",{"range":"98","text":"99"},"Update the dependencies array to be: [name, time, isToggleOn, timerID]",{"range":"100","text":"101"},"Update the dependencies array to be: [idx, newTime, reminderList, setReminderList]",{"range":"102","text":"103"},"Update the dependencies array to be: [deadLine, now, result]",{"range":"104","text":"105"},[788,790],"[dummy]",[1770,1772],"[todoDummy]",[852,876],"[name, time, isToggleOn, timerID]",[1698,1707],"[idx, newTime, reminderList, setReminderList]",[597,607],"[deadLine, now, result]"]