[{"/Users/jinhyun/Desktop/projects/reminder/chrome/src/index.js":"1","/Users/jinhyun/Desktop/projects/reminder/chrome/src/App.js":"2","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Reminder.js":"3","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Todo.js":"4","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Main.js":"5","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/Nav.js":"6","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoElement.js":"7","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/Modal.js":"8","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/ReminderElement.js":"9"},{"size":219,"mtime":1629640314426,"results":"10","hashOfConfig":"11"},{"size":776,"mtime":1629812701601,"results":"12","hashOfConfig":"11"},{"size":2037,"mtime":1629803616077,"results":"13","hashOfConfig":"11"},{"size":2699,"mtime":1629817698155,"results":"14","hashOfConfig":"11"},{"size":360,"mtime":1629715926335,"results":"15","hashOfConfig":"11"},{"size":558,"mtime":1629715926335,"results":"16","hashOfConfig":"11"},{"size":519,"mtime":1629817698155,"results":"17","hashOfConfig":"11"},{"size":1881,"mtime":1629816227772,"results":"18","hashOfConfig":"11"},{"size":972,"mtime":1629803616000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5ue1j",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jinhyun/Desktop/projects/reminder/chrome/src/index.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/App.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Reminder.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Todo.js",["39"],"import { useState } from \"react\";\nimport TodoElement from \"../Components/TodoElement\";\nimport \"./Todo.css\";\nimport uuid from \"react-uuid\";\n\nconst Todo = () => {\n  const todoDummy = [\n    {\n      id: uuid(),\n      name: \"복습하기\",\n      isChecked: false,\n    },\n    {\n      id: uuid(),\n      name: \"비타민챙겨먹기\",\n      isChecked: false,\n    },\n  ];\n\n  const [todoList, setTodoList] = useState(todoDummy);\n  const [doneList, setDoneList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const openModalHandler = () => {\n    setIsOpen(!isOpen)\n  };\n\n  const addTodoDummy = () => {\n    setTodoList([\n      ...todoList,\n      {\n        id: uuid(),\n        name: \"입력바람\",\n        isChecked: false,\n      },\n    ]);\n  };\n\n  const deleteTodoDummy = (e) => {\n    setTodoList(todoList.filter((el) => el.id !== e.id));\n  };\n\n  const deleteTodoDummy2 = (e) => {\n    setDoneList(doneList.filter((el) => el.id !== e.id))\n  }\n\n  const handleCheckChange = (check, id) => {\n    if(check) {\n      setDoneList([...doneList, ...todoList.filter((el) => el.id === id)])\n      setTodoList(todoList.filter((el) => el.id !== id))\n    }\n    else {\n      setDoneList(doneList.filter((el) => el.id !== id))\n      setTodoList([...todoList, ...doneList.filter((el) => el.id === id)])\n    }\n  }\n\n  return (\n    <div className=\"container__todo\">\n      <h3 className=\"todo__title\">To do!</h3>\n      {todoList.map((e) => {\n        return (\n          <TodoElement\n            name={e.name}\n            id={e.id}\n            isChecked={e.isChecked}\n            todoList={todoList}\n            setTodoList={setTodoList}\n            handleCheckChange={handleCheckChange}\n            deleteTodoDummy={() => deleteTodoDummy(e)}\n          />\n        );\n      })}\n      <div className=\"todo__container__add\">\n        <div className=\"todo__add\" onClick={openModalHandler}>\n          +\n        </div>\n        {isOpen === false ? \n          null :\n        <div className='modalBackdrop' onClick={openModalHandler}>\n          <div className='modalView' onClick={(e) => e.stopPropagation()}>\n            <div onClick={openModalHandler} className='close-btn'>&times;</div>\n            <div className='desc'>Hi Hello?</div>\n          </div>\n        </div>\n      }\n      </div>\n      <div><h3>Done List</h3></div>\n      {doneList.map((e) => {\n        return (\n          <TodoElement\n            id={e.id}\n            name={e.name}\n            isChecked={true}\n            todoList={todoList}\n            setTodoList={setTodoList}\n            handleCheckChange={handleCheckChange}\n            deleteTodoDummy={() => deleteTodoDummy2(e)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/jinhyun/Desktop/projects/reminder/chrome/src/Pages/Main.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/Nav.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/TodoElement.js",[],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/Modal.js",["40"],"/Users/jinhyun/Desktop/projects/reminder/chrome/src/Components/ReminderElement.js",[],{"ruleId":"41","severity":1,"message":"42","line":27,"column":9,"nodeType":"43","messageId":"44","endLine":27,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":18},"no-unused-vars","'addTodoDummy' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used."]